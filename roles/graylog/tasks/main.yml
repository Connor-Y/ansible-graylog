---

- name: Add the OpenJDK PPA
  apt_repository:
    repo: 'ppa:openjdk-r/ppa'
    state: present

- name: Install packages and dependencies
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - apt-transport-https
    - openjdk-8-jre-headless
    - uuid-runtime
    #- pwgen # Cant find package

- block:
    - name: Import mongodb-org gpg public signing key | python version > 2.7.6
      apt_key:
        url: "{{ mongodb_signing_key_url }}"
        state: present
      when: ansible_python_version|version_compare('2.7.6', '>')

    - name: Add mongodb-org apt repository to sources.list
      apt_repository:
        repo: "{{ mongodb_apt_repo }}"
        update_cache: yes
        state: present

  #  - name: Add MongoDB Repo
   #   apt_repository: repo='deb http://repo.mongodb.org/apt/ubuntu {{ansible_distribution_release}}/mongodb-org/3.4 multiverse' state=present

    - name: Create MongoDB Configuration
      template:
        src: mongod.conf.j2
        dest: /etc/mongod.conf
        owner: root
        group: root
        mode: 0644

    - name: Install Mongodb Packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: "{{ update_apt_cache }} "
      with_items: "{{ mongodb_packages }}"

    - name: add mongodb directories
      file:
        state: directory
        path: "{{ item }}"
        owner: "{{ mongodb_user }}"
        group: "{{ mongodb_group }}"
        mode: 0755
      with_items:
        - "{{ mongodb_dbpath }}"
        - "{{ mongodb_logpath | dirname }}"

    - name: ensure mongodb service is running and enabled on boot
      service:
        name: "{{ mongodb_service_name }}"
        enabled: yes
        state: started

    - meta: flush_handlers
  become: true
  become_method: sudo
  tags:
    - mongodb-3.0

# - name: Create required directory for mongodb
#   file: path=/data/db state=directory



# - name: Install MongoDB
#   block:
#     - name: Retrieve and install package
#       apt:
#         name: mongodb-org
#         update_cache: "{{ update_apt_cache }}"
#         state: installed
#         allow_unauthenticated: yes
#     - name: set mongod INIT status and start
#       service: name=mongod state=started enabled=yes
#   become: true
#   become_user: root

# - name: Install MongoDB # Suggested not to use the default ubuntu package but instead retrieve directly from mongo-org.
#   apt: name=mongodb-server state=installed

- name: Add the ElasticSearch public GPG key to the apt repo
  apt_key: url=https://packages.elastic.co/GPG-KEY-elasticsearch
           state=present

- name: Add ElasticSearch to the trusted sources list
  apt_repository:
    repo: deb https://packages.elastic.co/elasticsearch/2.x/debian stable main # TODO: Use var here
    state: present

- name: Install ElasticSearch
  apt: name=elasticsearch state=present

- name: Copy the ElasticSearch configuration file
  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml owner=root group=elasticsearch mode=0750 force=yes
  notify: restart elasticsearch


- name: Download the Graylog repository package # TODO Set to latest repo
  get_url:
    url: "{{ graylog_apt_repo }}"
    dest: '/tmp/graylog_repository.deb'

- name: Install the Graylog repository package
  apt:
    deb: '/tmp/graylog_repository.deb'
    state: present
    dpkg_options: 'force-all'
  register: install_repo

- name: Install Graylog
  apt: name=graylog-server update_cache={{ update_apt_cache }} state=installed

- name: Copy the Graylog configuration file
  template: src=graylog.server.conf.j2 dest=/etc/graylog/server/server.conf owner=root group=root mode=0644 force=yes
  notify: restart graylog
